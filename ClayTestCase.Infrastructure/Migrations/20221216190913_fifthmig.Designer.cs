// <auto-generated />
using System;
using ClayTestCase.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClayTestCase.Infrastructure.Migrations
{
    [DbContext(typeof(AssessmentDataContext))]
    [Migration("20221216190913_fifthmig")]
    partial class fifthmig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.11");

            modelBuilder.Entity("ClayTestCase.Core.Enitities.AccessRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AccessRoles");
                });

            modelBuilder.Entity("ClayTestCase.Core.Enitities.ActivityLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("DoorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmployeeRole")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAccessGranted")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("ClayTestCase.Core.Enitities.Door", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Doors");
                });

            modelBuilder.Entity("ClayTestCase.Core.Enitities.DoorAccessRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessRoleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DoorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccessRoleId");

                    b.HasIndex("DoorId");

                    b.ToTable("DoorAccessRoles");
                });

            modelBuilder.Entity("ClayTestCase.Core.Enitities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ClayTestCase.Core.Enitities.DoorAccessRole", b =>
                {
                    b.HasOne("ClayTestCase.Core.Enitities.AccessRole", "AccessRole")
                        .WithMany("DoorAccessRoles")
                        .HasForeignKey("AccessRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClayTestCase.Core.Enitities.Door", "Door")
                        .WithMany("DoorAccessRoles")
                        .HasForeignKey("DoorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessRole");

                    b.Navigation("Door");
                });

            modelBuilder.Entity("ClayTestCase.Core.Enitities.AccessRole", b =>
                {
                    b.Navigation("DoorAccessRoles");
                });

            modelBuilder.Entity("ClayTestCase.Core.Enitities.Door", b =>
                {
                    b.Navigation("DoorAccessRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
